{"version":3,"sources":["tools/Tools.js","components/Popovers.js","components/InputEditor.js","components/InputForm.js","components/Sidebar.js","components/WarningList.js","App.js","reportWebVitals.js","index.js"],"names":["postData","a","url","data","fetch","method","mode","headers","body","JSON","stringify","response","json","styles","relation","color","type","property","unit","unknown","popoverExample","Popover","id","Content","style","popoverType","popoverProperty","popoverRelation","popoverUnit","popoverUnknown","popoverSuggestion","ExampleButton","OverlayTrigger","trigger","placement","overlay","Button","variant","TypeButton","PropertyButton","RelationButton","UnitButton","UnknownButton","RELATION_MATCH","RegExp","TYPE_MATCH","PROPERTY_MATCH","UNIT_MATCH","UNKNOWN_MATCH","InputEditor","props","compositeDecorator","CompositeDecorator","strategy","relationStrategy","component","relationSpan","typeStrategy","typeSpan","propertyStrategy","propertySpan","unitStrategy","unitSpan","unknownStrategy","unknownSpan","state","editorState","EditorState","createEmpty","categories","types","properties","relations","units","unknowns","editor","React","createRef","focus","current","onChange","getCurrentContent","getPlainText","parentCallback","setState","oldProps","activeRule","this","selectionState","getSelection","newContentState","ContentState","createFromText","Description","newEditorState","create","currentContent","selection","decorator","root","onClick","placeholder","ref","spellCheck","Component","contentBlock","callback","contentState","findCategory","regex","matchArr","start","text","getText","exec","index","length","data-offset-key","offsetKey","children","fontFamily","paddingBottom","width","border","cursor","fontSize","minHeight","padding","button","marginTop","textAlign","suggestions","float","right","InputForm","useState","description","value","setValue","translation","setResponse","retranslation","setRetranslation","ErrorLevel","priorityLevel","setPriorityLevel","useEffect","handleSubmit","event","preventDefault","customObjects","then","rule","parse","Name","updateActiveRule","err","console","log","onSubmit","className","childData","e","target","size","block","Sidebar","sidebar","setSidebar","ruleset","setRuleset","optionClicked","selectActiveRule","Rules","find","innerText","listRules","map","helpPopover","defaultShow","outline","Accordion","defaultActiveKey","Toggle","as","eventKey","data-toggle","Collapse","addNewRule","defaultValue","name","newRuleset","document","getElementById","click","exportJson","WarningList","content","setContent","getSuggestionList","foo","suggestion","listWarnings","Object","keys","warning","includes","addCustomObject","newContent","_","clone","Ruleset","TempRule","tempRule","push","indexOf","findIndex","pop","App","ruleCount","setRuleCount","setActiveRule","deleteActiveRule","addTempRule","pos","splice","uploadHandler","reader","FileReader","onload","result","importedRulesets","alert","readAsText","files","newName","toExport","filteredRules","filter","dataStr","encodeURIComponent","createElement","href","download","update","visibility","word","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.41bb5477.chunk.js","sourcesContent":["// Following is based on :\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\nexport async function postData(url = '', data = {}) {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors', \r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json(); // parses JSON response into native JavaScript objects\r\n  }\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\n\r\nconst styles = {\r\n    relation: {\r\n      color: 'rgba(0, 123, 255, 1.0)',\r\n      //blue\r\n    },\r\n    type: {\r\n      color: 'rgba(255, 193, 7, 1.0)',\r\n      //yellow\r\n    },\r\n    property: {\r\n      color: 'rgba(30, 138, 55, 1.0)',\r\n      //green\r\n    },\r\n    unit: {\r\n      color: 'rgba(25, 197, 224, 1.0)',\r\n      //cyan\r\n    },\r\n    unknown: {\r\n      color: 'rgba(220, 53, 69, 1.0)',\r\n      //red\r\n    },\r\n};\r\n\r\n//Each of these functions determines the contents of each popover.\r\nconst popoverExample = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Content>\r\n      All <span style={styles.type}>windows</span> should have a <span style={styles.property}>width</span> of <span style={styles.unit}>no less than 15 inch</span> and a <span style={styles.property}>height</span> of <span style={styles.unit}>no more than 2 feet</span> and is <span style={styles.relation}>above</span> a <span style={styles.type}>sink</span>.\r\n      </Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nconst popoverType = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Content>\r\n      The type of the object (Chair, Refrigerator, etc.).\r\n      </Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nconst popoverProperty = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Content>\r\n      Properties the object possesses (width, height, etc.)\r\n      </Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nconst popoverRelation = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Content>\r\n      The relationship between objects (directly against, above, below, between).\r\n      </Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nconst popoverUnit = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Content>\r\n      Units of measurement used (in, ft, m).\r\n      </Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nconst popoverUnknown = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Content>\r\n      Unrecognized component.\r\n      </Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nexport const popoverSuggestion = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Content>\r\n      Here some suggested words ;)\r\n      </Popover.Content>\r\n    </Popover>\r\n);\r\n\r\n//Buttons to display the popovers that were defined above. Buttons are called in App.js to be displayed.\r\nexport const ExampleButton = () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popoverExample}>\r\n      <Button variant=\"primary\">Example</Button>\r\n    </OverlayTrigger>\r\n);\r\n\r\nexport const TypeButton = () => (\r\n    <OverlayTrigger trigger={[\"hover\", \"focus\"]} placement=\"top\" overlay={popoverType}>\r\n      <Button variant=\"outline-warning\">Type</Button>\r\n    </OverlayTrigger>\r\n);\r\n\r\nexport const PropertyButton = () => (\r\n    <OverlayTrigger trigger={[\"hover\", \"focus\"]} placement=\"top\" overlay={popoverProperty}>\r\n      <Button variant=\"outline-success\">Property</Button>\r\n    </OverlayTrigger>\r\n);\r\n\r\nexport const RelationButton = () => (\r\n    <OverlayTrigger trigger={[\"hover\", \"focus\"]} placement=\"top\" overlay={popoverRelation}>\r\n      <Button variant=\"outline-primary\">Relation</Button>\r\n    </OverlayTrigger>\r\n);\r\n\r\nexport const UnitButton = () => (\r\n    <OverlayTrigger trigger={[\"hover\", \"focus\"]} placement=\"top\" overlay={popoverUnit}>\r\n      <Button variant=\"outline-info\">Unit</Button>\r\n    </OverlayTrigger>\r\n);\r\n\r\nexport const UnknownButton = () => (\r\n    <OverlayTrigger trigger={[\"hover\", \"focus\"]} placement=\"top\" overlay={popoverUnknown}>\r\n      <Button variant=\"outline-danger\">Unknown</Button>\r\n    </OverlayTrigger>\r\n);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Editor, EditorState, CompositeDecorator, ContentState } from 'draft-js';\r\nimport { ParseJson } from '../tools/jsonParser';\r\nimport _ from \"lodash\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport { popoverSuggestion } from './Popovers.js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\n\r\nvar RELATION_MATCH = RegExp('Relation', 'g')\r\nvar TYPE_MATCH = RegExp('Type', 'g')\r\nvar PROPERTY_MATCH = RegExp('Property', 'g')\r\nvar UNIT_MATCH = RegExp('Unit', 'g')\r\nvar UNKNOWN_MATCH = RegExp('Unknown', 'g')\r\n\r\n// Component for text input field that handles text coloring with the Draft.js library.\r\n// Resides within InputForm\r\nexport class InputEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.compositeDecorator = new CompositeDecorator([\r\n            {\r\n                strategy: relationStrategy,\r\n                component: relationSpan,\r\n            },\r\n            {\r\n                strategy: typeStrategy,\r\n                component: typeSpan,\r\n            },\r\n            {\r\n                strategy: propertyStrategy,\r\n                component: propertySpan,\r\n            },\r\n            {\r\n                strategy: unitStrategy,\r\n                component: unitSpan,\r\n            },\r\n            {\r\n                strategy: unknownStrategy,\r\n                component: unknownSpan,\r\n            },\r\n        ]);\r\n\r\n        this.state = {\r\n            editorState: EditorState.createEmpty(this.compositeDecorator),\r\n            categories: { types: [], properties: [], relations: [], units: [], unknowns: [] },\r\n        };\r\n        \r\n        this.editor = React.createRef();\r\n\r\n        this.focus = () => this.editor.current.focus();\r\n\r\n\r\n        this.onChange = (editorState) => {\r\n            // Sets current state, and also sets the value state of our parent component via the callback function passed in props.\r\n            if (editorState.getCurrentContent().getPlainText() !== this.state.editorState.getCurrentContent().getPlainText()) {\r\n                this.props.parentCallback(editorState.getCurrentContent().getPlainText());\r\n            }\r\n            this.setState({ editorState: editorState });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(oldProps) {\r\n        if (oldProps.activeRule !== this.props.activeRule) {\r\n            // We want to set the text in the rule box to be the description of the rule\r\n            const selectionState = this.state.editorState.getSelection();\r\n            const newContentState = ContentState.createFromText(this.props.activeRule.Description);\r\n            const newEditorState = EditorState.create({ currentContent: newContentState, selection: selectionState, decorator: this.compositeDecorator })\r\n            this.setState({ editorState: newEditorState })\r\n            // Then try and refresh our highlighting information.\r\n            this.props.parentCallback(newEditorState.getCurrentContent().getPlainText())\r\n        }\r\n    }\r\n\r\n    /*\r\n    componentDidMount() {\r\n        this.props.socket.on(\"ReturnParsedComponents\", data => {\r\n            // We receive a json formatted string of parsedComponents. We want to pass this new data on to our draftjs component for use in regex matching.\r\n            let newCategories = ParseJson(data);\r\n            // we strip out any custom objects\r\n            this.setState({ categories: newCategories });\r\n            if (this.state.categories.relations.length > 0) { RELATION_MATCH = RegExp(this.state.categories.relations.join('|'), 'g'); } else { RELATION_MATCH = RegExp('Relation', 'g') }\r\n            if (this.state.categories.types.length > 0) { TYPE_MATCH = RegExp(this.state.categories.types.join('|'), 'g'); } else { TYPE_MATCH = RegExp('Type', 'g') }\r\n            if (this.state.categories.properties.length > 0) { PROPERTY_MATCH = RegExp(this.state.categories.properties.join('|'), 'g'); } else { PROPERTY_MATCH = RegExp('Property', 'g') }\r\n            if (this.state.categories.units.length > 0) { UNIT_MATCH = RegExp(this.state.categories.units.join('|'), 'g'); } else { UNIT_MATCH = RegExp('Unit', 'g') }\r\n            if (this.state.categories.unknowns.length > 0) { UNKNOWN_MATCH = RegExp(this.state.categories.unknowns.join('|'), 'g'); } else { UNKNOWN_MATCH = RegExp('Unknown', 'g') }\r\n\r\n            this.compositeDecorator = _.clone(this.compositeDecorator);\r\n            this.setState({ editorState: EditorState.set(this.state.editorState, { decorator: this.compositeDecorator }) })\r\n        });\r\n    }*/\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"editor-container\" style={styles.root}>\r\n                <div id=\"editor\" style={styles.editor} onClick={this.focus}>\r\n                    <Editor\r\n                        editorState={this.state.editorState}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Enter your rule here, then press Submit.\"\r\n                        ref={this.editor}\r\n                        spellCheck={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction relationStrategy(contentBlock, callback, contentState) {\r\n    findCategory(RELATION_MATCH, contentBlock, callback);\r\n}\r\n\r\nfunction typeStrategy(contentBlock, callback, contentState) {\r\n    findCategory(TYPE_MATCH, contentBlock, callback);\r\n}\r\n\r\nfunction propertyStrategy(contentBlock, callback, contentState) {\r\n    findCategory(PROPERTY_MATCH, contentBlock, callback);\r\n}\r\n\r\nfunction unitStrategy(contentBlock, callback, contentState) {\r\n    findCategory(UNIT_MATCH, contentBlock, callback);\r\n}\r\n\r\nfunction unknownStrategy(contentBlock, callback, contentState) {\r\n    findCategory(UNKNOWN_MATCH, contentBlock, callback);\r\n}\r\n\r\n\r\n\r\n\r\nfunction findCategory(regex, contentBlock, callback) {\r\n    const text = contentBlock.getText();\r\n    let matchArr, start;\r\n    while ((matchArr = regex.exec(text)) !== null) {\r\n        start = matchArr.index;\r\n        callback(start, start + matchArr[0].length);\r\n    }\r\n}\r\n\r\n\r\n\r\nconst relationSpan = (props) => {\r\n    return (\r\n        <span\r\n            style={styles.relation}\r\n            data-offset-key={props.offsetKey}\r\n        >\r\n            {props.children}\r\n        </span>\r\n    );\r\n};\r\n\r\nconst typeSpan = (props) => {\r\n    return (\r\n        <span\r\n            style={styles.type}\r\n            data-offset-key={props.offsetKey}\r\n        >\r\n            {props.children}\r\n        </span>\r\n    );\r\n};\r\n\r\nconst propertySpan = (props) => {\r\n    return (\r\n        <span\r\n            style={styles.property}\r\n            data-offset-key={props.offsetKey}\r\n        >\r\n            {props.children}\r\n        </span>\r\n    );\r\n};\r\n\r\nconst unitSpan = (props) => {\r\n    return (\r\n        <span\r\n            style={styles.unit}\r\n            data-offset-key={props.offsetKey}\r\n        >\r\n            {props.children}\r\n        </span>\r\n    );\r\n};\r\n\r\nconst unknownSpan = (props) => {\r\n    return (\r\n        <OverlayTrigger trigger=\"focus\" placement=\"top\" overlay={popoverSuggestion}>\r\n            <span\r\n                style={styles.unknown}\r\n                data-offset-key={props.offsetKey}\r\n            >\r\n                {props.children}\r\n            </span>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    root: {\r\n        fontFamily: '\\'Helvetica\\', sans-serif',\r\n        paddingBottom: 10,\r\n        width: 600,\r\n    },\r\n    editor: {\r\n        border: '1px solid #ddd',\r\n        cursor: 'text',\r\n        fontSize: 16,\r\n        minHeight: 40,\r\n        padding: 10,\r\n    },\r\n    button: {\r\n        marginTop: 10,\r\n        textAlign: 'center',\r\n    },\r\n    relation: {\r\n        color: 'rgba(0, 123, 255, 1.0)',\r\n        //blue\r\n    },\r\n    type: {\r\n        color: 'rgba(255, 193, 7, 1.0)',\r\n        //yellow\r\n    },\r\n    property: {\r\n        color: 'rgba(40, 167, 69, 1.0)',\r\n        //green\r\n    },\r\n    unit: {\r\n        color: 'rgba(23, 162, 184, 1.0)',\r\n        //cyan\r\n    },\r\n    unknown: {\r\n        color: 'rgba(220, 53, 69, 1.0)',\r\n        //red\r\n    },\r\n    suggestions: {\r\n        float: 'right',\r\n        width: '1%',\r\n        right: '-100px'\r\n\r\n    }\r\n};","import { useState, useCallback, useEffect } from 'react';\r\nimport { postData } from '../tools/Tools.js';\r\nimport _ from \"lodash\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { InputEditor } from './InputEditor';\r\nimport './InputForm.css'\r\n\r\n\r\n\r\n//Input form is the component that sends user input to the backend through a socket.io endpoint. It receives text coloring from InputEditor.\r\nexport function InputForm(props) {\r\n    // functions that let us access and change state\r\n    const [value, setValue] = useState(props.activeRule.description);\r\n    const [response, setResponse] = useState(props.activeRule.translation);\r\n    const [retranslation, setRetranslation] = useState(props.activeRule.retranslation);\r\n    const [priorityLevel, setPriorityLevel] = useState(props.activeRule.ErrorLevel)\r\n\r\n    // useCallback prevents from initializing new debounce function when re-rendered, which breaks the functionality of debouncing.\r\n    //const debouncedEmit = useCallback(_.debounce(function emitMessage(data) { props.socket.emit(\"GetParsedComponents\", data); }, 200), []);\r\n\r\n    useEffect(() => {\r\n        // Each time the activeRule is changed from our props, we update state to be re-rendered.\r\n        //setValue(props.activeRule.description);\r\n        setPriorityLevel(props.activeRule.ErrorLevel);\r\n        setResponse(props.activeRule.translation);\r\n        setRetranslation(props.activeRule.retranslation);\r\n        \r\n    }, [props.activeRule])\r\n\r\n    // Callback function, something that can be called from child to set \"value\" from our state to the contents of the Draft.js textbox\r\n    const setValueFromChild = (childData) => {\r\n        if (childData !== value) {\r\n            setValue(childData);\r\n            //debouncedEmit(childData);\r\n        }\r\n    }\r\n\r\n    //Function to select priority level of a rule with the optionselect rendered below.\r\n    const selectChange = e => {\r\n        setPriorityLevel(e.target.value)\r\n\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        // Runs every time the submit button is pressed, or the user presses enter.\r\n        event.preventDefault();\r\n        setResponse(\"Processing...\");\r\n        setRetranslation(\"\");\r\n        postData('/api/translate', { 'rule': value, 'customobjects': props.customObjects }).then(data => {\r\n            try {\r\n                setResponse(data.response);\r\n                let rule = JSON.parse(data.rule);\r\n                rule.translation = data.response;\r\n                rule.retranslation = data.retranslation;\r\n                rule.Name = props.activeRule.Name;\r\n                rule.ErrorLevel = priorityLevel;\r\n                props.updateActiveRule(rule);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div id=\"input-form\">\r\n                <InputEditor className=\"input-editor\" parentCallback={setValueFromChild} activeRule={props.activeRule} customObjects = {props.customObjects}/>\r\n                <div className=\"wrapper\">\r\n                        <br/>\r\n                        <select className=\"select-css\" onChange={selectChange} value={priorityLevel}>\r\n                            <option value={\"Recommended\"}>Error Level: Recommended</option>\r\n                            <option value={\"Warning\"}>Error Level: Warning</option>\r\n                            <option value={\"Error\"}>Error Level: Error</option>\r\n                        </select>\r\n                </div>\r\n                <Button onClick={handleSubmit} variant=\"outline-primary\" size=\"lg\" block>Submit</Button>\r\n                <div id=\"response-wrapper\">\r\n                    <br/>\r\n                    <div id=\"response-content\">{response}</div>\r\n                    <br/>\r\n                    <div id=\"retranslation-content\">{retranslation}</div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\n\r\n// Based on this example by Michael Burrows https://dev.to/michaelburrows/build-a-react-sidebar-navigation-component-2j4i\r\n\r\nfunction Sidebar(props) {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const [ruleset, setRuleset] = useState(props.ruleset);\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  useEffect(() => {\r\n    setRuleset(props.ruleset);\r\n  }, [props.ruleset, props.activeRule]);\r\n\r\n  function optionClicked(event) {\r\n    props.selectActiveRule(props.ruleset.Rules.find(rule => rule.Name === event.target.innerText));\r\n  }\r\n\r\n  function newButtonClicked(event) {\r\n    props.addNewRule()\r\n    setRuleset(props.ruleset)\r\n  }\r\n\r\n  function setNewName(event) {\r\n    let newRuleset = ruleset;\r\n    newRuleset.Name = event.target.value;\r\n    props.setRuleset(newRuleset);\r\n    setRuleset(newRuleset);\r\n  }\r\n\r\n  function setNewDescription(event) {\r\n    let newRuleset = ruleset;\r\n    newRuleset.Description = event.target.value;\r\n    props.setRuleset(newRuleset);\r\n    setRuleset(newRuleset);\r\n  }\r\n\r\n  const listRules = ruleset.Rules.map(function returnRuleDiv(rule) {\r\n    if (rule === props.activeRule) {\r\n      return (\r\n        <div className=\"list-option rounded active-rule\"\r\n          key={rule.Name}\r\n          onClick={optionClicked}\r\n        >{rule.Name}</div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"list-option rounded\"\r\n          key={rule.Name}\r\n          onClick={optionClicked}\r\n        >{rule.Name}</div>\r\n      )\r\n    }\r\n  });\r\n\r\n  const helpPopover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Content>\r\n        Press here to create or modify your rulesets.\r\n        </Popover.Content>\r\n    </Popover>\r\n  );\r\n\r\n  return (\r\n    <nav className={sidebar ? \"sidebar active\" : \"sidebar\"}>\r\n      <OverlayTrigger trigger={[\"hover\", \"focus\"]} placement=\"right\" defaultShow={true}  overlay={helpPopover}>\r\n        <button outline=\"none\" className=\"hamburger hamburger--elastic\" type=\"button\" onClick={showSidebar}>\r\n          <span outline=\"none\" className=\"hamburger-box\">\r\n            <span outline=\"none\" className=\"hamburger-inner\"></span>\r\n          </span>\r\n        </button>\r\n      </OverlayTrigger>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <Accordion.Toggle as={\"div\"} className=\"rules-accordion\" eventKey=\"0\" data-toggle=\"collapse\">\r\n          <label>Rules</label><div className={\"fa fa-chevron-down\"}/>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <div id=\"ruleset-sidebar-list\">\r\n            <ul>\r\n              {listRules}\r\n              <div className=\"list-option add-rule-button rounded\" onClick={newButtonClicked}>\r\n                <div className=\"fa fa-plus\"/>\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        </Accordion.Collapse>\r\n      </Accordion>\r\n      <hr/>\r\n      <div id=\"ruleset-naming\">\r\n        <label>Ruleset Name</label><input id=\"ruleset-name-box\" className=\"form-control\" type=\"text\" defaultValue={ruleset.name} onChange={setNewName} />\r\n        <br />\r\n        <label>Description</label><textarea id=\"ruleset-description-box\"className=\"form-control\" type=\"text\" defaultValue={ruleset.description} onChange={setNewDescription} />\r\n      </div>\r\n      <div id=\"json-buttons\">\r\n        <Button className=\"btn \"variant=\"outline-primary\" id=\"import-button\" onClick={() => document.getElementById('import-file').click()}>Import JSON</Button>\r\n        <Button className=\"btn\"variant=\"outline-primary\" id=\"export-button\" onClick={props.exportJson}>Export to JSON</Button>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport _ from \"lodash\";\r\nimport Button from 'react-bootstrap/esm/Button';\r\n\r\n\r\n//Function to catch and display unrecognized components in a sidebar on the right side of the screen.\r\nexport function WarningList(props){\r\n    const [content, setContent] = useState({});\r\n  \r\n    function getSuggestionList(content, foo){\r\n      // Maps list of suggested alternatives to an <li> object for rendering\r\n      return (\r\n        content[foo].map((suggestion) => <li key={suggestion}>{suggestion}</li>)\r\n      )\r\n    }\r\n    \r\n    const onClick = (warning) => {\r\n      props.addCustomObject(warning);\r\n      let newContent = _.clone(content);\r\n      delete newContent[warning];\r\n      setContent(newContent);\r\n    }\r\n\r\n    const listWarnings = Object.keys(content).map((warning) => {\r\n      // Maps unknown suggestions object returned from SocketIO message to HTML toast elements to render.\r\n      if(!props.customObjects.includes(warning)){\r\n       return (\r\n          <div className=\"warning-card\">\r\n            <h5>Token \"{warning}\" was not recognized. Most similar:</h5>\r\n            <ul>\r\n              {getSuggestionList(content, warning)}\r\n            </ul>\r\n            <Button className=\"btn btn-outline-danger\" variant=\"outline\" onClick={() => onClick(warning)}>Use Anyways</Button>\r\n          </div>\r\n       )\r\n      }\r\n      return \"\";\r\n    });\r\n  \r\n   /* useEffect(() => {\r\n      props.socket.on(\"ReturnUnknownRecommendations\", _.debounce(function newToast(data){\r\n        // Retrieving unknown word recommendations from the server, sent as a simple dict\r\n        let suggestions = JSON.parse(data);\r\n        setContent(suggestions)\r\n      }, 200));\r\n    }, [props.socket])\r\n    */\r\n  \r\n    return(\r\n      <div id='toast-container'>{listWarnings}</div>\r\n    )\r\n  }\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { InputForm } from './components/InputForm';\nimport { ExampleButton, TypeButton, PropertyButton, RelationButton, UnitButton, UnknownButton } from './components/Popovers';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/esm/Button';\nimport Sidebar from \"./components/Sidebar\";\nimport { WarningList } from \"./components/WarningList\";\nimport { postData } from \"./tools/Tools\";\n//import '../node_modules/draft-js/dist/Draft.css';\n\nfunction App() {\n  // Example page was built based on the following: https://blog.miguelgrinberg.com/post/how-to-create-a-react--flask-project\n\n  // Page itself has some state, as it stores the current ruleset object. It also has an \"Active Rule\", which it keeps track of which rule is in focus.\n  const [ruleset, setRuleset] = useState(new Ruleset(\"New Ruleset\", \"Ruleset\", [new TempRule(\"Rule1\", \"\", \"Recommended\")]));\n  const [ruleCount, setRuleCount] = useState(1); // Used for default names of Rules\n  const [activeRule, setActiveRule] = useState(ruleset.Rules[0])\n  const [customObjects, setCustomObjects] = useState([]) // Words in this list will be passed on to use in the final rule\n\n  // Callback function to update active rule from InputForm\n  const updateActiveRule = (childData) => {\n    ruleset.update(activeRule, childData);\n    setActiveRule(childData);\n  }\n\n  const selectActiveRule = (rule) => {\n    setActiveRule(rule);\n  }\n  const deleteActiveRule = () => {\n    if (ruleset.Rules.length === 1) {\n      // We need to make a new one to focus on\n      ruleset.addTempRule(\"Rule1\", \"\")\n    }\n    let pos = ruleset.Rules.indexOf(activeRule);\n    if (pos === (ruleset.Rules.length - 1)) {\n      // Last element in the list, so we set active rule to the previous one\n      setActiveRule(ruleset.Rules[pos - 1])\n    } else {\n      setActiveRule(ruleset.Rules[pos + 1])\n    }\n    ruleset.Rules.splice(pos, 1);\n\n\n  }\n  const addNewRule = () => {\n    // Increment the last number\n    let newName = \"Rule\" + (ruleCount + 1);\n    setRuleCount(ruleCount + 1);\n    ruleset.addTempRule(\n      newName, \"\"\n    )\n  }\n\n  const addCustomObject = (word) => {\n    customObjects.push(word);\n  }\n\n  const exportJson = () => {\n    // Generate ruleset JSON file and download it\n    let toExport = JSON.parse(JSON.stringify(ruleset));\n    let filteredRules = toExport.Rules.filter((rule) => !(rule instanceof TempRule));\n    filteredRules.map(rule => {delete rule.translation; delete rule.retranslation;});\n    toExport.Rules = filteredRules;\n    // from https://stackoverflow.com/a/30727676 \n    let dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify([toExport]));\n    let a = document.createElement('a');\n    a.href = 'data:' + dataStr;\n    a.download = ruleset.Name + '.json'\n    a.click();\n  }\n\n  const uploadHandler = (event) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      let text = (e.target.result);\n      try {\n        let importedRulesets = JSON.parse(text);\n        // We create new ruleset object using our class\n        let newRuleset = new Ruleset(importedRulesets[0].Name, importedRulesets[0].Description, importedRulesets[0].Rules);\n        // The translation for a rule is not stored in the JSON of the rule, \n        for (let rule of newRuleset.Rules) {\n          postData('/api/translate', { 'rule': rule.Description }).then(data => {\n            try {\n              rule.translation = data.response;\n              rule.retranslation = data.retranslation;\n            } catch (err) {\n              console.log(err);\n            }\n          });\n        }\n        setRuleset(newRuleset);\n        setRuleCount(newRuleset.Rules.length);\n        if (ruleCount === 0) {\n          ruleset.addTempRule(\"Rule1\", \"\");\n        }\n        setActiveRule(newRuleset.Rules[0]);\n      } catch {\n        alert(\"Parsing failed, please check file and try again.\");\n      }\n    };\n    reader.readAsText(event.target.files[0])\n  }\n\n  return (\n    <div className=\"App\" className=\"container-fluid\">\n     <div className=\"row\">\n       \n        <div id=\"left-sidebar\" className=\"col-md\">\n          <Sidebar ruleset={ruleset} activeRule={activeRule} selectActiveRule={selectActiveRule} addNewRule={addNewRule} deleteActiveRule={deleteActiveRule} setRuleset={setRuleset} exportJson={exportJson} uploadHandler = {uploadHandler}/>\n        </div>\n        \n        <div id=\"main-content\" className=\"col-md-8\">\n          <div id=\"App-header\">\n            <h1>Natural Language Rules</h1>\n            <h5>Natural language to JSON rule conversion.</h5>\n          </div>\n          \n          <div id=\"category-buttons\">\n            <TypeButton />\n            <PropertyButton />\n            <RelationButton />\n            <UnitButton />\n            <UnknownButton />\n            <ExampleButton />\n          </div>\n\n          <div id=\"editor\">\n            <InputForm activeRule={activeRule} updateActiveRule={updateActiveRule}  customObjects = {customObjects}/>\n          </div>\n          <Button id=\"delete-button\" className=\"btn btn-danger\" onClick={deleteActiveRule}>Delete <i className=\"fa fa-trash\"/></Button>\n          <input style={{ visibility: \"hidden\" }} type=\"file\" name=\"file\" id=\"import-file\" onChange={uploadHandler} />\n          \n        </div>\n        \n        <div id=\"right-sidebar\" className=\"col-md\">\n          <WarningList addCustomObject = {addCustomObject} customObjects = {customObjects}/>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\n// Rulset object class definition\nclass Ruleset {\n  constructor(name = \"Name\", description = \"Description\", Rules = [new TempRule()]) {\n    this.Name = name;\n    this.Description = description;\n    this.Rules = Rules;\n  }\n  addTempRule(name, description) {\n    // For adding a rule to the list before replacing it with a translated rule object.\n    var tempRule = new TempRule(name, description);\n    this.Rules.push(tempRule);\n  }\n  update(tempRule, rule) {\n    // Once we have received a rule object from translation phase, replace it in the list\n    let index = this.Rules.indexOf(tempRule);\n    this.Rules[index] = rule;\n  }\n  removeRule(rule) {\n    // Remove the rule from the list\n    let index = this.Rules.findIndex(rule);\n    this.Rules.pop(index);\n  }\n}\n\n// Class for a mock rule which only contains name and description\nclass TempRule {\n  constructor(name = \"Rule\", description = \"\", ErrorLevel = \"Recommended\") {\n    this.Name = name;\n    this.Description = description;\n    this.ErrorLevel = ErrorLevel;\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}